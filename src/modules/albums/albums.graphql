type AlbumsCollection {
  items: [Album]!
  limit: Int!
  offset: Int!
  total: Int!
}

type Album {
  id: ID!
  name: String
  released: Int
  artists: [Artist]
  bands: [Band]
  tracks: [Track]
  genres: [Genre]
  image: String
}

input AlbumInput {
  name: String
  released: Int
  artistsIds: [String]
  bandsIds: [String]
  trackIds: [String]
  genresIds: [String]
  image: String
}

type Query {
  album(id: ID!): Album
  albums: AlbumsCollection
}

type Mutation {
  createAlbum(body: AlbumInput): Album
  updateAlbum(id: ID!, body: AlbumInput): Album
  deleteAlbum(id: ID!): EntityDelete
}