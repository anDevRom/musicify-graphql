type Member {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  instrument: String
  years: [String]
}

type BandsCollection {
  items: [Band]!
  limit: Int!
  offset: Int!
  total: Int!
}

type Band {
  id: ID!
  name: String
  origin: String
  members: [Member]
  website: String
  genres: [Genre]
}

input BandInput {
  name: String
  origin: String
  membersIds: [String]
  website: String
  genresIds: [String]
}

type Query {
  band(id: ID!): Band
  bands: BandsCollection
}

type Mutation {
  createBand(body: BandInput): Band
  updateBand(id: ID!, body: BandInput): Band
  deleteBand(id: ID!): EntityDelete
}